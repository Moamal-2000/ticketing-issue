import { useEffect, useState } from 'react'
import S from './LayoutTemplate.module.css'
import Button from '../button/Button'
import { EllipsisVertical, LucideMenuSquare, Menu, Search, Trash, X } from 'lucide-react'
import { fetchDataWithDelay } from '../../libs/utils'
import { sidebarLinks, sidebarLinksSettings, tableDataTest } from '../../libs/data-center'
import Input from '../input/Input'
import DropdownAvatar from '../dropdown/DropdownAvatar'
import Title from '../title/Title'
import Table from '../table/Table'
import THead from '../table/THead'
import TR from '../table/TR'
import TD from '../table/TD'
import TBody from '../table/TBody'
import TFoot from '../table/TFoot'
import TH from '../table/TH'
import Badge from '../badge/Badge'
import CreateTicket from '../../app/pages/home/CreateTicket'

// type Props = {}

function Nav({ collapseASide }) {
  return (
    <nav className={S.navbar}>
      <Button onClick={collapseASide} size='square' outline>
        <Menu size={24} strokeWidth={1.5} />
      </Button>
      <span className={S['navbar__divider']}></span>
      <label className={S["navbar__search-box"]}>
        <Search size={30} strokeWidth='1.5' className={S["navbar__search-icon"]} />
        <Input type='search' placeholder='Search...' />
      </label>
      {/* <Avatar size='md' /> */}
      <DropdownAvatar />
    </nav>
  )
}
function ASide({ collapseASide }) {
  const sidbarLinksContent = sidebarLinks?.map((link) => (
    <li key={link?.id} className={S['aside__item']}>
      <a
        href={link?.path}
        about={link.title}
        title={link?.title}
        className={S.aside__link}
      >
        <link.icon size={24} className={S['aside__icon']} />
        {link?.title}
      </a>
    </li>
  ))

  const sidbarLinksContentSettings = sidebarLinksSettings?.map((link) => (
    <li key={link?.id} className={S['aside__item']}>
      <a
        href={link?.path}
        about={link.title}
        title={link?.title}
        className={S.aside__link}
      >
        <link.icon size={24} className={S['aside__icon']} />
        {link?.title}
      </a>
    </li>
  ))

  return (
    <aside className={S.aside}>
      <div className={S["aside__header"]}>
        <img className={S['aside__logo']} src="https://tailwindui.com/plus/img/logos/mark.svg?color=indigo&shade=500" alt="" />
        <Button size='square' variant='primary' className={S['aside__collapse-btn']} onClick={collapseASide} >
          <X size={24} />
        </Button>
      </div>
      <div className={S["aside__content"]}>
        <ul className={S['aside__list']}>
          {sidbarLinksContent}
        </ul>
      </div>
      <div className={`${S['aside__others']} ${S['aside__content']}`}>
        <h4 className={S['aside__others__title']}>others:</h4>
        <ul className={S['aside__list']}>
          {sidbarLinksContentSettings}
        </ul>
      </div>
    </aside>
  )
}


export default function LayoutTemplate() {
  const [collapse, setCollapse] = useState(true)
  const collapseASide = () => {
    setCollapse((prev) => !prev)
    console.log(collapse)
  }

  const badgeStatus: { [key: string]: string } = {
    solved: 'success',
    blocked: 'danger',
    solving: 'warning',
    issued: 'info',
    closed: 'primary'
  }

  return (
    <div className={`${S.layout} ${collapse && S.layout_collapse}`}>
      <ASide collapseASide={collapseASide} />
      <Nav collapseASide={collapseASide} />
      <main className={S.outlet} >
        <Title text='Tickets' />
        <CreateTicket />
        <Table striped grid>
          <THead>
            <TR>
              <TH>name</TH>
              <TH>issue</TH>
              <TH>ref no.</TH>
              <TH>department</TH>
              <TH>status</TH>
              <TH>actions</TH>
            </TR>
          </THead>
          <TBody>
            {tableDataTest.slice(0, 10).map((table) => (
              <TR key={table?.id} id={String(table?.id)}>
                <TD dataCell='name'>{table.name}</TD>
                <TD dataCell='issue'>{table.issue}</TD>
                <TD dataCell='ref'>{table.ref}</TD>
                <TD dataCell='department'>{table.department}</TD>
                <TD dataCell='status'>{<Badge text={table.status} variant={badgeStatus[table.status]} />}</TD>
                <TD dataCell='actions'>
                  <div className='flex'>
                    <Button outline variant='info' size='xs'><EllipsisVertical size={15} /></Button>
                    <Button outline variant='danger' size='xs'><Trash size={15} /></Button>
                  </div>
                </TD>
              </TR>
            ))}
          </TBody>
          <TFoot >
            <TR>
              <TD colSpan={23}>pagination</TD>
            </TR>
          </TFoot>
        </Table>
      </main>
    </div>
  )
}